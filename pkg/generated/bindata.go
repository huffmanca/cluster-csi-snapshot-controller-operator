// Code generated by go-bindata.
// sources:
// assets/csi_controller_deployment.yaml
// assets/volumesnapshotclasses.yaml
// assets/volumesnapshotcontents.yaml
// assets/volumesnapshots.yaml
// DO NOT EDIT!

package generated

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCsi_controller_deploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4b\x6b\x03\x31\x0c\x84\xef\xfe\x15\x62\xef\xce\xa3\x50\x28\x86\x1c\x02\x3d\x96\x92\x53\xef\xaa\x23\x12\x11\xf9\x51\xcb\xbb\x65\xff\x7d\xf1\x26\x85\xed\x63\x5b\x9f\x8c\x98\x6f\x66\xa4\x0b\xc7\xa3\x83\x47\xca\x92\xc6\x40\xb1\x1a\xcc\xfc\x42\x45\x39\x45\x07\x98\xb3\xae\x87\xad\x09\x54\xf1\x88\x15\x9d\x01\x88\x18\xc8\x81\x57\xb6\x1a\x31\xeb\x39\x55\xeb\x53\xac\x25\x89\x50\x31\x9a\xc9\x37\x95\x52\x19\xd8\xd3\xf3\x24\xee\x16\xd4\x9d\x01\x28\x94\x85\x3d\xaa\x83\xed\x84\x09\xf9\x9a\x4a\xb3\x00\x08\x58\xfd\xf9\x09\x5f\x49\xf4\x3a\x80\xd6\x68\x39\x1c\xa0\x52\xc8\x82\x95\x6e\xfc\xac\x76\x7b\xf2\xc5\xea\x5f\x33\x80\xcf\x6d\xa6\xff\x75\xa3\xbd\xf7\xa9\x8f\xf5\x6f\x0e\xa0\x0d\x90\x23\x95\x59\x9c\xbd\xdd\x6e\x99\x6a\x8f\x03\x9e\xc8\xc1\x5b\x8f\xe3\x8a\xd3\xfa\xf2\xa0\x5e\x79\xfd\x0b\xe3\x86\xbb\xd5\x66\xb5\x99\xa1\x58\x4e\xb3\xb8\x6b\x64\x67\xed\xb0\xbb\xef\x7e\x4e\x85\xf0\x48\xc5\x4e\x07\xe7\x14\x77\xb5\xf4\xd4\x7d\xef\x71\xe8\x45\x0e\x49\xd8\x8f\x0e\xf6\xf2\x8e\xa3\x9a\x8f\x00\x00\x00\xff\xff\xee\x06\x62\x3e\x31\x02\x00\x00")

func assetsCsi_controller_deploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCsi_controller_deploymentYaml,
		"assets/csi_controller_deployment.yaml",
	)
}

func assetsCsi_controller_deploymentYaml() (*asset, error) {
	bytes, err := assetsCsi_controller_deploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/csi_controller_deployment.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVolumesnapshotclassesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x8f\xe3\x36\x0c\xbd\xfb\x57\x10\xe9\xa5\x05\x6a\x07\x8b\xbd\xb4\xbe\x2d\xb2\x2d\xb0\xd8\xb6\x18\xcc\x4c\xe7\x52\xf4\xc0\x58\x4c\xac\x46\xa6\x34\xa2\x94\x69\xfa\xeb\x0b\xc9\x5f\x49\xc6\xe9\xcc\xa1\xbe\x59\xa2\xc8\xc7\xc7\x47\x4a\x65\x59\x16\xe8\xf4\x13\x79\xd1\x96\x6b\x40\xa7\xe9\xef\x40\x9c\xfe\xa4\x3a\xfc\x20\x95\xb6\xeb\xe3\x87\x2d\x05\xfc\x50\x1c\x34\xab\x1a\x36\x51\x82\xed\xee\x49\x6c\xf4\x0d\x7d\xa6\x9d\x66\x1d\xb4\xe5\xa2\xa3\x80\x0a\x03\xd6\x05\x00\x32\xdb\x80\x69\x59\xd2\x2f\x40\x63\x39\x78\x6b\x0c\xf9\x72\x4f\x5c\x1d\xe2\x96\xb6\x51\x1b\x45\x3e\x47\x18\xe3\x7f\xab\xe8\x48\xe6\xbb\x7c\x04\x9d\x2e\xd1\x39\x6f\x8f\xa4\xf2\x01\xcf\x14\x28\x21\xaa\x61\xd5\x86\xe0\xa4\x5e\xaf\xf7\x3a\xb4\x71\x5b\x35\xb6\x5b\xcf\x26\x65\x23\x7a\x9d\xf2\xf0\x8c\xa6\x14\x46\x27\xad\x0d\x81\xfc\xda\x45\x63\xd6\x1f\x3e\xfe\xb8\x2a\x00\x1a\x4f\x19\xe1\xa3\xee\x48\x02\x76\xae\x06\x8e\xc6\x14\x00\x8c\x1d\xd5\x70\xb4\x26\x76\x34\x9e\x6e\x0c\x8a\x90\x54\xe3\x7f\x25\xc1\x7a\xdc\xd3\x40\x52\x21\x8e\x9a\x94\xea\xde\xdb\xe8\x6a\xb8\x65\xd6\x3b\x1f\x48\xe9\x09\x7d\xca\x71\x1e\x86\x03\x9b\x14\x27\xef\x1a\x2d\xe1\xeb\x2d\x8b\x5f\xb4\x84\x6c\xe5\x4c\xf4\x68\x6e\xa0\xcd\x16\xa2\x79\x1f\x0d\xfa\x45\x9b\x02\x40\x1a\xeb\xa8\x86\x8d\x89\x12\xc8\x17\x00\xce\x93\x90\x3f\xd2\xef\x7c\x60\xfb\xc2\x3f\x6b\x32\x4a\x6a\xd8\xa1\x11\x2a\x00\x8e\x68\xb4\xca\xcc\xf5\x59\x58\x47\xfc\xe9\xee\xcb\xd3\xc7\x87\xa6\xa5\x0e\xfb\x45\x00\x45\xd2\x78\xed\x66\xbb\xf4\x2d\x64\x02\x89\x39\xbd\xd3\x24\xe0\xd0\x63\x47\x81\xbc\x40\x68\x31\x00\x42\x64\x45\xde\x9c\x34\xef\x61\x20\x72\x72\x25\x27\x09\xd4\x41\x14\x12\x78\x69\x89\x87\x7a\xf2\x1e\x70\x48\x74\x2e\x02\x7c\x1a\xa3\x34\x37\xe9\x4e\x9f\x96\xe4\x4f\xc1\xf6\x34\xd8\xe7\xc8\x3a\x48\xae\x1a\x68\x06\xbc\x3a\x0f\x76\xfb\x17\x35\xa1\x5a\x72\x4b\xb3\x63\xf4\x04\x6c\xb9\xcc\xc5\x77\xd8\x90\x1a\xb6\x9c\xb7\x8e\x7c\xd0\xa3\x24\x06\xe1\x8f\x0d\x39\xad\xdd\xe0\x33\x7d\xab\x44\x7e\x6f\x0f\x2a\xb5\x23\x25\xfa\x08\x86\xa6\x22\x05\x92\x0b\x03\x76\x07\xa1\xd5\x02\x9e\x72\x85\xb9\x6f\xd0\x0b\x5f\x76\x07\xc8\x53\x4e\x0f\x49\x05\x5e\x40\x5a\x1b\x8d\x4a\x3d\x7c\x24\x1f\xc0\x53\x63\xf7\xac\xff\x99\x3c\x0b\x04\x9b\x43\x1a\x0c\x34\xe8\x72\xa2\x94\xfb\x36\x4c\xb2\x89\xf4\x3d\x20\x2b\xe8\xf0\x04\x9e\x52\x0c\x88\x7c\xe6\x2d\x9b\x48\x05\xbf\x5a\x9f\xc8\xde\xd9\x1a\xce\xfa\x7c\x1c\x47\x8d\xed\xba\xc8\x3a\x9c\xd6\x79\xa8\xe8\x6d\x0c\xd6\xcb\x3a\x4f\x8e\x75\x1a\x1a\x19\x27\xe7\xe1\x53\x75\xea\x1b\x3f\x8c\x2a\x59\x9d\x01\x0b\xa7\xa4\x79\x09\x5e\xf3\xbe\x98\x29\x36\x94\x8e\xdd\x59\xa3\x9b\xd3\xbb\xc8\xbf\x3c\x02\x2a\xa9\xb7\xcb\x25\x78\x69\x29\xb4\xe4\x5f\x29\x66\x63\x39\x10\x87\x5e\xae\x93\x0e\x06\x54\xad\xb7\x71\xdf\x66\x2e\x17\x5b\xa5\x2f\xc4\x96\xfa\xb8\xa4\x7a\xe5\x27\x81\x6e\x6d\x64\x75\x75\xe8\xb2\x10\x32\x1e\xaa\xe0\x21\x3a\x67\x7d\x98\x28\xcf\xfa\x5c\xdd\x53\x40\xcd\xab\x5c\xa2\xd5\xe7\x6c\xbb\xaa\xe6\xe5\x8e\x90\xe5\x0a\x2e\x86\x25\xac\x43\x86\xc9\x4f\x82\xe6\xda\x93\xe8\x06\xcd\xd4\x8f\x60\xf9\xac\xb3\x2f\x5c\x0e\x5d\x3e\x76\x77\xc2\x75\x20\x17\xaa\x09\x50\x0f\xe3\x8d\xd0\x17\x2e\xdf\x09\x63\x29\xf4\x44\xd8\x3d\x3d\x47\xed\x49\x55\x67\x9e\x89\x63\x77\x29\x86\x12\x7a\x90\x57\x8b\x3d\x81\x6f\x8a\xcf\xeb\x23\xf9\xf7\x89\x2e\x9b\xa6\x8a\x26\x06\xf2\x68\xca\xbd\x4d\x53\x0e\x83\x45\x66\xa9\x45\x56\x26\xcf\x04\x7d\x59\xbe\x05\x85\x2d\x67\xba\x88\x37\x5f\x5e\xef\x9a\x4f\xe9\x12\x4b\x60\x71\x70\xd1\x8b\x6e\x1e\x43\x69\x29\x81\xbf\xff\xe9\xe1\x11\xc6\x6e\x7d\x0d\xb7\x9f\x4a\xf3\x31\x99\x07\x54\x1a\x28\x9a\x77\x39\x63\x2d\xb0\xf3\xb6\xcb\x1e\x89\x95\xb3\x9a\x7b\xa5\x34\x46\x5f\x4b\x43\xe2\xb6\x4b\xd2\xf0\xf4\x1c\x49\x42\x9a\x63\x15\x6c\xf2\xe3\x25\x35\x59\x74\x0a\x73\xf9\xbf\x30\x6c\xb0\x23\xb3\x41\xa1\xff\x7b\x3c\x25\x72\xa5\x4c\x6c\xbe\x3d\xa0\xe6\x0b\xf2\x9c\x62\x54\x2a\xbf\xc0\xd0\xdc\x2d\xdc\x26\x37\x9d\xfd\x47\xc9\xce\x2e\xe2\x5c\xb7\x03\x9d\xca\xbe\x68\x1d\x3a\x78\xd1\xa1\xbd\x56\xda\x78\xbd\xde\x72\xb3\xb3\x7e\xbe\xa0\xc7\x06\x94\x0a\x1e\x5b\x12\x3a\x9f\x42\xd6\xe1\x73\xa4\x74\xa1\x7c\x9d\x9f\x7c\xaf\x78\xe9\xb5\x30\x2c\xfb\x41\xb2\x73\x0e\xe5\xd5\x5c\x3e\xdf\xc8\x78\x8b\x45\x67\xd3\x33\x74\x7c\xf1\x4e\x4b\x03\x9f\xe5\xf8\x34\x9c\xf6\xb3\x8a\x92\x0a\x55\x0d\xc1\xc7\xb1\xf5\x07\x76\x86\x35\x09\x18\x62\x76\x81\x4d\x43\x2e\x90\xfa\xed\xfa\x11\xb8\x5a\x5d\xbc\xe6\xf2\x6f\x63\xb9\x2f\xac\xd4\xf0\xc7\x9f\x45\xef\x95\xd4\xd3\x08\x29\x2d\xfe\x1b\x00\x00\xff\xff\xad\x1d\x14\x25\xc1\x0b\x00\x00")

func assetsVolumesnapshotclassesYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsVolumesnapshotclassesYaml,
		"assets/volumesnapshotclasses.yaml",
	)
}

func assetsVolumesnapshotclassesYaml() (*asset, error) {
	bytes, err := assetsVolumesnapshotclassesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/volumesnapshotclasses.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVolumesnapshotcontentsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5a\x5b\x8f\x1b\x45\xf6\x7f\xf7\xa7\x38\x32\x42\x10\xfd\xc7\xed\x04\xfe\xda\x5d\xfc\x86\x26\xc0\xce\x2e\x4c\xa2\xcc\x24\xfb\x80\xa2\x50\xee\x3a\xb6\x6b\xa7\xba\xaa\xa9\x8b\x1d\x83\xf8\xee\xab\x53\x97\x76\xbb\x2f\x1e\x3b\x24\xb4\x90\xc8\x54\x77\x9d\xfa\x9d\xfb\xa5\x3c\x9b\xcd\x26\xac\x16\x6f\xd0\x58\xa1\xd5\x02\x58\x2d\xf0\xbd\x43\x45\x7f\xd9\xe2\xe1\x1f\xb6\x10\x7a\xbe\x7d\xb6\x44\xc7\x9e\x4d\x1e\x84\xe2\x0b\xb8\xf6\xd6\xe9\xea\x15\x5a\xed\x4d\x89\xcf\x71\x25\x94\x70\x42\xab\x49\x85\x8e\x71\xe6\xd8\x62\x02\xc0\x94\xd2\x8e\xd1\xb2\xa5\x3f\x01\x4a\xad\x9c\xd1\x52\xa2\x99\xad\x51\x15\x0f\x7e\x89\x4b\x2f\x24\x47\x13\x4e\xc8\xe7\x7f\xc9\x71\x8b\xf2\x49\xd8\xc2\x6a\x31\x63\x75\x6d\xf4\x16\x79\xd8\x60\x14\x3a\x24\x44\x0b\x98\x6e\x9c\xab\xed\x62\x3e\x5f\x0b\xb7\xf1\xcb\xa2\xd4\xd5\xfc\xf0\xc9\xac\xb4\x62\x4e\x7c\x18\xc5\xe4\xcc\x2a\x56\xdb\x8d\x76\x0e\xcd\xbc\xf6\x52\xce\x9f\x7d\xfd\xcd\x74\x02\x50\x1a\x0c\x08\xef\x45\x85\xd6\xb1\xaa\x5e\x80\xf2\x52\x4e\x00\x14\xab\x70\x01\x5b\x2d\x7d\x85\x79\x37\x31\x80\xca\xd9\x22\x2f\x14\xd6\x69\xc3\xd6\x98\xa4\x34\xb1\x35\x96\xc4\xeb\xda\x68\x5f\x2f\x60\xec\xb3\x48\x3d\x49\x25\x4a\xf4\x4d\x38\xe8\x2e\x6d\xb8\x8e\x07\x85\xf7\x52\x58\xf7\xef\xf1\x6f\x7e\x14\x36\x7e\x57\x4b\x6f\x98\x1c\x83\x1c\x3e\xb1\x42\xad\xbd\x64\x66\xe4\xa3\x09\x80\x2d\x75\x8d\x0b\xb8\x96\xde\x3a\x34\xb4\xe0\x97\x26\xa9\x39\xe1\xb5\x8e\x39\x6f\x17\xf0\xfb\x1f\x13\x80\xda\xa0\x45\xb3\xc5\xd7\xea\x41\xe9\x9d\xfa\x5e\xa0\xe4\x76\x01\x2b\x26\x2d\x4e\x00\xb6\x4c\x0a\x1e\x04\x1c\xf7\xea\x1a\xd5\xb7\x2f\x6f\xde\x7c\x7d\x57\x6e\xb0\x62\x71\x11\x80\xa3\x2d\x8d\xa8\x0f\xdf\xd1\x33\xc8\x2d\x18\x0c\x47\x2a\x67\xc1\x6d\x10\x58\xe9\x3c\x93\x30\xd5\x6a\xc6\x85\x7d\x98\x36\x22\x6f\xc8\xe8\xe5\x7f\xb1\x74\x20\x54\xf8\xde\x2b\x8e\x46\xee\x85\x5a\x43\xd2\x09\xd8\xbd\x75\x58\xa5\xef\x6b\xa3\x6b\x34\x4e\x64\x66\x93\x0d\x66\xdf\x68\xd6\x46\x30\xd3\x33\x25\x06\xe3\xf7\xc0\xc9\x33\x30\x42\x4d\xf6\x8d\x1c\x6c\x60\x1e\xf4\x0a\xdc\x46\xd8\x03\x4b\x41\x50\x47\xb4\xf4\x0a\x98\x4a\x2c\x14\x70\x47\x92\x36\x16\xec\x46\x7b\xc9\xc9\x9d\xb6\x68\x48\x24\xa5\x5e\x2b\xf1\x5b\x43\xd9\x82\xd3\xe1\x48\xc9\x1c\x5a\x77\x44\x51\xa8\xe8\x11\xa4\x1a\x8f\x57\xc0\x14\x87\x8a\xed\xc1\x60\x10\x93\x57\x2d\x6a\xe1\x13\x5b\xc0\x4f\xda\x20\x08\xb5\xd2\x0b\x68\xb9\x5c\x8e\x0c\xa5\xae\x2a\xaf\x84\xdb\xcf\x83\x7f\x8b\xa5\x77\xda\xd8\x79\x70\xe2\x39\xf9\x6f\xc0\xa9\x42\x1c\x28\x2a\xfe\x59\x63\x4e\xd3\x16\x30\xb7\x27\xb3\xb3\xce\x08\xb5\x6e\x96\x83\x67\x9c\x25\x72\xf2\x0f\x10\x16\x58\x22\x11\xa1\x1f\x24\x4b\x4b\x24\x90\x57\xdf\xdd\xdd\x43\x06\x10\xa4\x7f\x2c\xee\x68\x2b\x07\x1b\x3b\xc8\x9c\x64\x24\xd4\x0a\x4d\xd4\xd9\xca\xe8\x2a\x50\x44\xc5\x6b\x2d\x94\x0b\x7f\x94\x52\x64\xaf\xcd\x8f\xf5\xcb\x4a\x38\x52\xf2\xaf\x1e\x2d\x59\xad\x2e\xe0\x3a\x84\x46\x58\x22\xf8\x9a\x33\x87\xbc\x80\x1b\x05\xd7\xac\x42\x79\xcd\x2c\x7e\x6c\x89\x93\x70\xed\x8c\xa4\xf9\xb8\xcc\x73\x04\x7b\x54\xe6\xf4\x61\x63\xdf\x07\xb7\x09\x26\x3b\xe2\xbb\x21\xd8\x22\x3f\x22\xb3\xdc\x9f\xf6\xcb\x02\x5e\xe1\xaf\x5e\x18\xe4\x45\x6b\xdf\x90\x9b\x46\xb4\x12\x09\xea\x4b\x2d\x45\xb9\x3f\x7e\x77\x82\x97\xfe\x56\xe0\xe8\xd0\x54\x81\xb9\xdd\x06\xdd\x26\x2b\x7e\x3c\x4e\xb7\x1f\xf2\x2a\xd2\x7a\xbd\xd9\x5b\x51\x32\xd9\x84\x25\xd0\x8f\xc4\xa1\xe4\xdc\x3d\x8a\x4b\x8c\x08\x91\x13\x1e\x15\xa8\x2f\xb5\x57\xbc\x83\x88\xbc\x20\x7d\x58\xc0\x9d\xaf\x6b\x6d\x5c\xe3\xca\x7d\x9c\x06\x61\xfa\x0a\x1d\x13\x6a\x1a\x40\x4f\x9f\x87\xbd\xd3\xe2\xb0\x5c\x21\x53\x14\xc1\x58\xb4\xf1\x8f\x20\x80\x71\xe6\x09\xcf\x03\xd6\xae\x68\x80\xf4\x28\x9f\x03\xe7\xe4\xf1\x3d\x8a\xa7\xe1\x34\xc2\xbc\x51\xc0\xf7\x8a\x55\xa2\x3c\x50\xcb\xe5\x43\x8f\x66\xc9\x2c\x5e\xa5\x50\x41\x39\x11\x76\x42\x4a\x52\xe2\x4a\x48\x89\x9c\xd2\xd1\x4e\xb8\x4d\x60\x21\xb2\xda\x98\xde\x34\xee\x18\x30\x50\xf2\x35\x9e\x33\x59\x87\x71\xc9\xac\x1d\x58\x07\x83\x2b\x0a\x5f\x14\x75\xbe\xd7\xa6\x47\xb4\x36\x38\xc3\xf7\xc2\x86\x08\x99\xd9\xb2\x57\xe0\x2d\xed\xfa\xe9\xf5\xdd\x7d\x70\x74\xb1\xda\x1f\x31\x43\x16\x18\x79\x6f\x85\x8e\xfc\x8c\xab\x25\x27\xb2\x21\x97\xa6\x07\x95\xaf\xfa\x9e\x39\x83\x68\x0b\x03\x2f\xa2\x8d\x76\x5e\x0c\xc6\xb5\x20\x41\x23\xb6\x68\x2e\x8b\x0a\x61\x0b\x39\x15\x71\x45\x55\x5b\x4c\xdb\x08\xd7\x77\x37\xf9\xad\xb7\xc8\x29\xe5\xc6\xf8\x46\x6f\xfb\x72\xbe\x38\x10\x14\x70\x4f\x02\x0f\x2a\x58\x0e\x13\xb5\x04\x87\xb5\xa0\x19\x74\xde\x90\x8d\xa4\xa8\x4a\x18\x7f\x40\xf7\x52\xfa\xb5\x50\xb7\xac\xc2\x2f\x9f\x40\xc9\xa4\x84\x95\x36\xc1\x85\x46\xf8\x1d\xd7\xd0\xa8\x6c\x63\x4a\xbd\x48\xb6\x29\x0b\x47\xfb\xa2\xd4\x11\x92\xea\x6e\x83\x06\x29\x91\x67\x41\x65\xcf\x49\xd9\xa3\x8b\x08\xa2\x9c\xa2\x61\x0a\x0b\xa2\xaa\xbc\x63\x4b\x89\xc0\x56\x0e\x4d\xe3\xa2\xe3\x3c\x8d\x25\x93\x80\x31\xa1\xf8\x27\x53\x5c\xf6\xd8\x7b\x94\xc5\x3e\x89\x16\xbb\x59\x43\xd3\xfc\xc5\x3b\xc1\xa7\x21\x7f\x0e\xd2\x19\x74\xd5\x73\xcd\x68\x38\xa4\xd0\xd3\x16\x59\x5f\xb6\x27\x34\x4e\x4f\x6c\x23\xfe\x84\x70\xda\x04\x86\x44\x13\xdf\x67\xc1\x84\x32\x3a\xac\x0c\x12\x4b\xf6\x23\xca\x4d\xdb\x7e\x52\xb5\x4c\x09\x34\x86\x6f\x26\xe5\x1e\x1c\x7b\x40\x15\x76\x7c\x4a\x09\xc5\x57\x31\xec\x4d\xfa\x7c\x1f\x45\x6f\xf2\xcf\x8b\xfc\xa7\x1d\x8d\x06\xb3\x81\x4e\xc2\x08\x91\xbb\xd7\x18\xe5\x67\x89\x52\xab\xb5\x3d\xdb\xd3\x8f\xa1\xbf\xc2\xd5\x45\xa0\x7b\xbb\x3b\x5a\xef\xa4\xaf\x54\x91\x3b\xdd\x23\xd4\x62\xed\x54\xb2\x21\xed\x85\x3a\xa9\xe8\x7c\x56\xdc\xd5\x58\x16\x83\x5b\x49\x13\xbd\xf3\x62\x80\xa9\xbc\x4d\x39\x15\x15\x75\x10\xfa\x04\x82\x2f\x6c\x54\x51\x0c\xb6\x7d\x8a\x4b\xc1\x85\xc1\x92\xe4\xc4\x24\x2c\x85\xe2\xa1\x4d\xd1\x64\xaa\xa1\x71\x0e\x29\x1b\xd8\xb1\xe7\x9f\x57\x7f\x45\xe6\xaf\x22\x00\xaa\x86\xc2\xc0\xa1\x66\xe5\x88\xc5\x64\x69\xe5\x74\x53\x1b\xbd\x15\x1c\xfb\x0e\x41\xcc\xb4\xa0\x6e\x58\x5d\xa3\x2a\x3e\x69\x0c\x1e\xee\xbf\x87\xac\x0d\xbe\x7d\x79\x93\xfb\xec\xcc\x67\x52\x96\xbb\x38\xb6\x05\x6e\x5e\x32\xb7\xf9\xa0\xc0\xf6\xc5\xcd\x2a\x1e\x6d\x92\xa4\x18\xd4\x02\xa3\xf8\x9b\x96\x1e\x84\xb2\x0e\x19\x8f\x8b\x83\x74\xa8\x8d\x33\xd8\xe8\x33\xba\x72\xec\x71\x0f\x63\x00\x2a\x82\x80\x45\xa3\x81\x7f\xdd\xbd\xb8\x9d\xff\xa0\x4f\x04\x34\x56\x96\x68\x6d\x18\xe4\x60\x85\xca\x5d\x81\xf5\x14\x33\xa9\x73\xb0\xa4\x9d\x3b\x7a\x53\x54\x4c\x89\x15\x5a\x57\xa4\x13\xd0\xd8\x9f\xbf\x7a\x3b\x24\x47\x08\x86\x8a\xef\x59\x55\x4b\xbc\x02\x11\x25\xdf\x74\xd3\xd9\x5b\x84\x8d\x82\x68\xe8\x85\x1a\xb8\x57\xbf\x25\x90\x50\x6b\x9e\x18\xde\x05\x46\x29\x64\x53\xbe\x63\xa9\xbb\x97\xe2\x01\x17\x30\xa5\xf8\xd1\x82\xf8\x3b\x59\xfa\x1f\xfd\xbe\x81\x9e\x2f\x63\x71\x31\xa5\x4f\xa6\x87\xd2\xb8\x57\xdb\x1d\x00\xc6\x3e\xc3\x88\xf5\x1a\xcd\x80\x37\x40\x2a\x77\x91\xda\xed\x27\xa0\x0d\xf1\xae\x74\x8b\x40\x20\x4b\x3a\x4b\x51\x8e\xf7\x00\xff\xfc\xd5\xdb\x11\xb4\xc7\x72\x02\xa1\x38\xbe\x87\xaf\x62\x03\x20\x2c\xc9\xe7\x49\xf2\x3c\xbb\x57\x8e\xbd\xa7\x73\xca\x8d\xb6\xa8\x40\x2b\xb9\x1f\x46\x4b\x3e\xbb\x45\xb0\xba\x42\xd8\xa1\x94\xb3\xdc\x57\xec\xd8\x9e\xf8\xcf\xea\x22\x0b\x63\x50\x33\xe3\x8e\xa7\x50\x83\x54\xef\x5f\x3c\x7f\xb1\x88\xa8\xc8\x84\xd6\x8a\xa0\x28\xed\x60\x25\x28\xb6\x51\x00\x72\x47\x11\xc2\xfa\x1c\xd8\xa1\xdc\x30\xb5\x1e\x4e\xe8\xa9\xd5\x59\x79\xe7\x0d\x16\x5f\x5c\xea\xc1\xdd\xf9\x51\x7e\x8e\x42\x46\x9c\x1d\x75\x83\xc5\x5f\x33\x81\x39\x8b\x0b\x35\x50\x17\xf4\xb9\xb8\x6d\x99\xef\x49\x2e\x8e\x86\xe8\x73\xae\x4b\x4b\x3c\x94\x58\x3b\x3b\xd7\x5b\x34\x5b\x81\xbb\xf9\x4e\x9b\x07\xa1\xd6\x33\xb2\xbb\x59\x54\xbc\x9d\x87\x14\x32\xff\x2c\xfc\xef\x83\xb8\x08\xf9\xe7\x3c\x56\x8e\x52\xd5\xa7\xe4\x87\xce\xb1\xf3\x8b\xd9\xc9\x33\xc4\x33\x13\xd3\xa0\x75\x4f\xef\x62\x4c\x28\xbb\xd4\x3a\x95\x5b\x3b\x80\x0e\x12\xaa\x18\x8f\x51\x97\xa9\xfd\xc7\xb6\x5c\x92\xa5\x37\x74\xfc\x7e\x96\xee\x6f\x66\x4c\x71\xfa\xb7\x15\xd6\xd1\xfa\xc5\xc2\xf3\xe2\x0c\xb7\x7c\x7d\xf3\xfc\xaf\xb1\x67\x2f\x2e\x76\xca\x91\xb2\xde\xa4\xe2\xe6\x98\xb9\x59\x67\xb4\xd8\x7d\x19\x3a\xee\xce\x62\x34\x87\xce\x62\xaf\x74\xee\xcd\x72\x3b\x88\xd2\x4d\xcd\xc8\x34\x37\xbd\xee\xde\xa8\x44\x6d\xbb\x20\x65\x53\x85\xb2\x2d\xce\x74\x9b\xcb\xac\x33\xe6\xb0\xed\x6b\xb5\x8b\xda\x83\xf6\xc6\x3c\x75\x71\xf9\x6e\x2e\xce\x9d\x68\x29\x8c\xdc\x67\x42\xcd\xe8\xdd\x78\x6b\x43\x04\x42\x9f\xf7\xf8\x94\xf9\xd3\x4d\xf7\x32\x95\x77\x84\x75\x1a\x6b\x97\x81\x78\x92\x26\x37\xa1\x87\x0d\xad\xef\x75\x98\x77\x1c\xd4\x1d\xee\x0f\xa6\xb0\x7e\xf5\xf2\x3a\x0c\x71\x86\xba\x83\xd1\xf9\xc5\x29\xb4\x7f\x0a\x6a\xd3\xa9\xff\x28\xac\xcb\x60\x6d\x0b\x66\xae\x06\xd3\xac\xcc\xc6\x91\x74\x3f\x90\x09\x57\xc0\xcd\x2a\x14\x0d\x4d\xad\x74\x05\x82\x0c\x91\x8b\x92\xb9\xd4\x1f\x66\x88\xc1\x2a\x48\xc1\x3e\xde\x3c\x52\x21\x34\xd0\xb4\x05\x13\x6e\x6e\xda\x9a\xf2\x83\xc1\x6b\x25\xde\x83\x62\x4a\x5b\x2c\xb5\xe2\x36\xd2\x43\x55\x6a\x8e\x9c\x4a\x61\xa6\x40\x28\xf7\xb7\xff\xef\x17\x3c\x2f\x54\xd8\x7d\x95\x4a\xc5\xaa\xa2\xf2\xe6\x17\xce\x1c\xc2\xff\x7d\x6e\x3f\xbf\xfd\x25\x89\xe8\xd8\x9f\x22\x5e\xd5\x3e\xb3\xaf\x2d\x41\x51\xfe\xd9\x37\x7f\x7f\x3a\x7b\xfa\x6c\xf6\xf4\x19\x3c\x7d\xba\x08\xff\xc1\xeb\xfb\xeb\x2e\x90\xc8\xdb\x22\xa2\x1c\x0c\x50\x42\x39\x5c\x77\x62\x0b\x1a\xa3\x2f\x1b\x81\x86\x1d\xd9\x17\xe3\x8d\x22\xe8\x65\xb8\xf5\xe5\xe9\x25\xf7\xe6\x68\x28\x95\x95\x74\xd5\xd7\x72\x4c\x52\x17\x74\x7f\x15\x5a\xcb\xd6\x1f\x36\x5d\x9a\xa6\xcd\x47\x57\x83\x1c\x1d\x13\x32\xdf\x08\x92\xc6\xbd\x72\x54\xdd\x47\x66\x06\x09\x8d\x31\x48\xfc\x34\xd6\x5a\xc0\xed\x8b\xfb\xef\x16\x19\x71\xb8\x32\x5c\x22\x48\xbd\x5e\x23\xef\x8b\x02\x9a\x6b\x92\xdc\xc9\x91\xed\xe7\x6e\xce\xa2\xb2\xc2\x89\x2d\xb6\x03\x71\x71\x71\xaa\x75\x03\x01\xb8\x2b\xba\xc6\x95\x46\x82\x6d\xd4\xf1\x8e\xd9\xb6\xb0\x86\xfa\x80\x6c\x91\xe4\x0a\x21\x32\x7f\xa4\x61\x99\x41\xc6\xf7\xf7\xfa\xb5\xbd\x2c\x97\x1c\xb6\xb5\x62\x88\x68\xa7\x32\x08\xd5\x15\xe3\xfb\x34\x75\xf1\x76\xa0\xc7\x73\x9a\xea\x33\xa7\xc3\x54\x3a\xe6\xe0\xd3\xe9\xa2\x97\x1e\xfa\xb3\xab\x13\xe9\x22\xe0\x79\xe7\xf4\x3b\x6f\x73\x08\xee\x67\x87\x1e\xc5\x0f\xca\x16\x9d\xec\x30\x32\xf2\x1a\xcd\x16\x8f\x23\x1d\x9a\x7a\x7d\x48\xb2\x00\xe1\xae\x40\xbb\x0d\x9a\x9d\xb0\xd8\x77\xa5\x81\xdc\x66\x31\x34\x97\xd3\x7b\xe3\x71\x3a\x92\x59\xf2\x55\x22\x06\x23\x10\x0a\x6d\x5f\x06\xba\x6b\x2f\x39\xdf\x0c\x1a\xef\x52\x6b\x89\x9d\x49\x4e\x32\x9e\x3b\xf1\xdb\xa5\xe6\xdb\xec\xeb\xd5\x68\xba\xaa\x25\x3a\x04\x4b\x2f\x53\x95\x3c\x5e\x05\x51\xfd\x43\xf5\xf1\x65\x56\xdb\x51\xfc\x10\xd9\x83\x2d\x10\x90\x77\xe1\x94\x51\x9b\x1d\xb3\xd1\x1e\xe1\x4b\x6c\xf6\x3c\xa8\xe7\xe3\x1c\x29\x67\xc6\x31\x8e\x5b\x6c\x01\xff\xa1\x08\x1a\xd5\x18\xa7\x29\x31\x7a\x84\x93\x86\x6d\xb8\xcd\xdc\xb1\x76\xd3\xd6\x30\x9f\xbd\x7d\x11\x66\xb4\xb6\x62\x52\xc6\x19\x95\x1a\x74\xb5\xb6\x05\x89\x55\xa8\xa5\x6c\xdb\x05\x1a\x8f\x4a\x3e\x10\x6a\xe2\x60\x0b\x41\x9e\x2b\x26\x64\x3f\xcc\x3f\x5a\xa3\xa5\x8b\xf9\x00\x7e\xdc\x5f\x4e\x55\x2f\x95\x50\xa2\xf2\xd5\x02\x9e\x9e\x5d\xd6\x9c\xbe\xa7\x3b\x7d\x0d\x79\x7c\x3f\x27\x4e\x5d\xcc\x9d\xfc\x1d\xc1\x63\x1d\xc6\xe3\x82\xeb\x91\x1c\xf7\xd6\x0d\xa5\x63\x11\x7e\x97\x42\x7a\x42\x1e\x86\x8f\x51\xc3\x8e\xb4\x27\x14\x95\x55\x6b\x83\xf6\xdc\xab\x9d\x81\xfc\xdb\xef\x68\x67\x81\x81\xc9\xe0\x8e\xe6\x17\x9c\xf9\xc7\xa2\xcd\x52\xaa\xeb\x66\xf9\x57\x95\xcd\xfb\xa0\x80\x50\x4a\x2e\xc0\x99\xa6\xdb\x48\xb2\x4b\x6b\x87\x3e\x96\x95\xd4\xd8\x23\xbf\xed\xfe\x7c\x72\x1a\x5d\x34\xff\x06\x32\xfc\x49\x35\xb6\x88\x3f\x3f\x85\x9f\xdf\x4e\x22\x55\xe4\x6f\x32\x24\x5a\xfc\x5f\x00\x00\x00\xff\xff\xc7\xf5\x9a\xbd\xfc\x2a\x00\x00")

func assetsVolumesnapshotcontentsYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsVolumesnapshotcontentsYaml,
		"assets/volumesnapshotcontents.yaml",
	)
}

func assetsVolumesnapshotcontentsYaml() (*asset, error) {
	bytes, err := assetsVolumesnapshotcontentsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/volumesnapshotcontents.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVolumesnapshotsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x59\x4d\x8f\xdb\x38\xd2\xbe\xfb\x57\x14\x3c\x87\x37\x01\xda\x32\x82\xb9\xbc\xeb\xdb\xc2\x93\x01\x82\x9d\x49\x82\xee\x4e\xef\x61\xb1\x08\x68\xb1\x6c\x73\x9b\x22\x15\x16\x69\xc7\xb3\xd8\xff\xbe\x28\x92\x92\x25\x4b\xb2\xbb\xb3\xa3\x53\xb7\x44\x16\xeb\xe3\xa9\xa7\xaa\xe8\xc5\x62\x31\x13\xb5\x7a\x42\x47\xca\x9a\x15\x88\x5a\xe1\x77\x8f\x86\xff\xa3\xe2\xf9\xff\xa9\x50\x76\x79\x78\xb7\x41\x2f\xde\xcd\x9e\x95\x91\x2b\x58\x07\xf2\xb6\xba\x47\xb2\xc1\x95\xf8\x0b\x6e\x95\x51\x5e\x59\x33\xab\xd0\x0b\x29\xbc\x58\xcd\x00\x84\x31\xd6\x0b\x7e\x4d\xfc\x2f\x40\x69\x8d\x77\x56\x6b\x74\x8b\x1d\x9a\xe2\x39\x6c\x70\x13\x94\x96\xe8\xe2\x09\xcd\xf9\x6f\x24\x1e\x50\xbf\x8d\x5b\x44\xad\x16\xa2\xae\x9d\x3d\xa0\x8c\x1b\x9c\x41\x8f\xac\xd1\x0a\xe6\x7b\xef\x6b\x5a\x2d\x97\x3b\xe5\xf7\x61\x53\x94\xb6\x5a\x9e\x97\x2c\x4a\x52\x4b\xb6\xc3\x19\xa1\x17\x64\x44\x4d\x7b\xeb\x3d\xba\x65\x1d\xb4\x5e\xbe\xfb\xf9\x2f\xf3\x19\x40\xe9\x30\x6a\xf8\xa8\x2a\x24\x2f\xaa\x7a\x05\x26\x68\x3d\x03\x30\xa2\xc2\x15\x1c\xac\x0e\x15\x36\xbb\xa9\x68\xfe\x2a\xc8\x5b\x27\x76\x98\xdd\x33\xa3\x1a\x4b\x36\x72\xe7\x6c\xa8\x57\x30\xb5\x2c\x89\xcd\xee\x48\xae\x7c\x8a\x27\x3c\xe4\x0d\xf1\x83\x56\xe4\xff\x36\xf2\xf1\x37\x45\x69\x41\xad\x83\x13\x7a\xa0\x5d\xfc\x46\xca\xec\x82\x16\xee\xf2\xeb\x0c\x80\x4a\x5b\xe3\x0a\x3e\xb2\x0a\xb5\x28\x51\xf2\xbb\xb0\x71\x39\x8c\x59\x2d\xf2\xc2\x07\x5a\xc1\xbf\xff\x33\x03\xa8\x1d\x12\xba\x03\x7e\x31\xcf\xc6\x1e\xcd\xaf\x0a\xb5\xa4\x15\x6c\x85\x26\x9c\x01\x1c\x84\x56\x32\x3a\x30\xed\xb5\x35\x9a\xbf\x7e\xfe\xf0\xf4\xf3\x43\xb9\xc7\x4a\xa4\x97\x00\x12\xa9\x74\xaa\x3e\xaf\xe3\xa7\x6f\x1b\x28\x02\x01\x81\xd0\xfd\x1f\x81\xc3\x6f\x01\xc9\xc3\xd6\x3a\x40\xe5\xf7\xe8\x72\xa0\xcc\x0e\x04\xd4\x56\x19\xbf\x50\x66\xe1\x55\x85\xad\xb8\xc6\x4e\xb0\x5b\x5e\xc3\x60\x22\x8f\xc6\x67\x37\xdc\x81\x75\xb0\x51\x46\xb2\x0c\x6f\x79\x89\xc3\x05\x7e\x57\x14\xa5\xb6\x01\xcb\xf2\x6a\x67\x6b\x74\x5e\x35\x4e\xc9\x58\x6c\x72\xa4\x7d\x37\x61\x1b\x3f\x73\x76\x44\x5a\x0f\x92\x33\x04\x09\xfc\x1e\x21\xe3\x1c\x25\x50\x74\x12\x2b\xec\xf7\x8a\xad\x8e\xde\x36\x29\x67\x7a\xb2\xd8\x26\x03\x76\xf3\x2f\x2c\x7d\x01\x0f\x1c\x11\x47\x40\x7b\x1b\xb4\xe4\xb4\x3a\xa0\xf3\xe0\xb0\xb4\x3b\xa3\xfe\x68\x25\x13\x1b\xca\x47\x6a\xe1\x31\x43\xa7\x79\x94\x49\x99\xc1\x21\x0c\x78\x07\xc2\x48\xa8\xc4\x09\x1c\xf2\x19\x10\x4c\x47\x5a\x5c\x42\x05\xfc\x6e\x1d\x82\x32\x5b\xbb\x82\x4e\xea\x35\x0c\x51\xda\xaa\x0a\x46\xf9\xd3\x32\xe6\xb9\xda\x04\x6f\x1d\x2d\x63\x32\x2f\x39\x8f\xa3\x9e\x26\xf2\x41\x51\xc9\x9f\x5a\xd8\xcd\x3b\x8a\xf9\x13\x23\x94\xbc\x53\x66\xd7\xbe\x8e\x89\xf2\x22\x97\x73\xd6\x24\x24\x25\x11\x49\xf5\xb3\x67\x63\xf0\xf7\x08\xf7\xef\x1f\x1e\xa1\x51\x20\x7a\xbf\xef\xee\xe8\xe8\xf3\x36\x3a\xfb\x9c\x7d\xa4\xcc\x16\x5d\x8a\xd9\xd6\xd9\x2a\x4a\x44\x23\x23\x2e\xe3\x3f\xa5\x56\x68\xfa\xfe\xa6\xb0\xa9\x94\x6f\xa1\xcd\xa1\x29\x60\x1d\x29\x12\x36\x08\xa1\x96\xc2\xa3\x2c\xe0\x83\x81\xb5\xa8\x50\xaf\x05\xe1\x9f\xed\x71\x76\x2e\x2d\xd8\x9b\xb7\x7d\xde\x10\xda\x6d\x9f\xf3\xca\x1e\xc0\x25\x92\x72\x28\xa1\xdc\x0b\x27\x4a\x8f\x8e\x73\xac\xa4\x94\x98\x6d\x9a\x66\x47\x44\x12\x3a\x3f\x9b\x53\x66\x81\x51\xdb\x7b\x05\x60\x29\x6d\x49\x6c\x79\x89\xb5\xa7\x65\x66\xda\x65\x4a\xf7\x96\xf0\xe9\xa7\x31\x92\x6c\x9e\x7b\xfc\x16\x58\xd7\xa2\xeb\x8f\xb1\xdc\x8f\x2e\x89\x68\xe9\xbf\xbb\xe2\x98\xf3\x96\xe8\x4c\xb5\x55\x48\x70\xdc\xa3\xc3\xae\x1b\x8e\x4a\x6b\x06\x40\xe4\x37\x94\x11\x50\xc5\x40\xce\x63\xc4\x1a\x93\x2f\xa3\x5b\x55\x55\xf0\x62\xa3\x11\xc4\xd6\xb7\xdc\x68\x4d\x71\xb6\xe7\x42\xc2\x94\x49\xf1\x5b\x4b\x95\x89\x91\xd7\x5a\xa8\x8a\x6b\xc4\x70\xe9\x0d\x6b\xaf\x4a\xeb\x38\x81\x41\xc2\x75\x30\x31\x1f\x8e\xca\xf9\x3c\x26\xa7\x49\x4c\x65\xa2\x0c\x62\x19\xa6\xa9\x66\x20\x92\xe4\x91\x82\x7a\xf9\x64\x31\x29\x18\x51\x52\x13\x8e\x4c\xa9\x1b\x04\x79\x32\xa2\x52\xa5\xd0\xfa\x04\x5e\x3c\xa3\x49\xa1\x89\xa1\x18\x15\x3a\x0c\xcf\x30\x8e\x13\xc9\xd6\x3c\x87\x9e\xea\x6b\x6b\xd8\xfe\x1f\x0e\xc5\xa4\xb4\x89\x50\xf4\x4b\xe2\xa8\xc8\xa7\x31\x91\x6d\x5d\x9a\x40\xe9\x2b\xdd\x90\x3e\x25\x99\xb3\x2b\xf6\x68\x41\x34\xe6\x9b\xab\x7e\x99\x4f\x08\x61\x85\x2f\x60\x79\x69\x2c\x2f\x1d\xc8\x6b\x59\x8c\x99\x6b\xb8\xa9\x80\x0f\x5b\x60\x8a\x6f\x3c\x2e\xef\x32\x45\x6e\x45\xd0\x1e\x68\x0a\xa5\x25\x9f\xd6\x92\x43\x20\x94\xa0\xb6\x60\x0d\x42\x8c\x0f\x8d\x09\xe6\x12\xee\x23\xa4\x15\x81\xb1\x03\x99\x97\x87\xa6\x43\xee\x1a\xa4\x77\xde\x67\x3e\x49\xe7\x6f\x85\xd2\x05\xbc\xaf\x6a\x7f\x1a\xf2\x5b\xaa\xb2\xf1\x3c\x0f\x42\x6b\x7b\x64\x0e\xb3\x4d\x75\x64\x2c\x14\xf0\xf8\xe9\x97\x4f\x6f\xbe\x2b\x61\x76\xdf\x94\x30\x6f\x57\x20\xe0\x88\x9b\xbd\xb5\xcf\x9d\x06\x72\x20\xdb\x1a\x40\x3e\x34\x1f\xf2\x67\x15\x84\x45\xb4\xba\xdf\x75\x5c\x41\xa4\xcb\x8c\xda\x87\xd2\x22\x33\xfb\xa0\x8a\x5e\xc0\x36\xf7\xd2\x2f\xab\xa3\x71\x6d\xa7\xe9\x48\xad\x44\x70\x8e\x73\x8c\xed\x76\x55\x0a\x4b\xaf\x90\x16\xf0\xf1\xd3\xe3\xfb\x8b\x4a\x95\x44\x95\xc2\x30\x7a\x2a\x2b\x23\x42\x18\xa2\xb9\xe5\x02\x1b\x9b\x6a\xbf\x17\x06\xe8\x44\x1e\xab\xce\x70\x46\xb9\x1b\x0c\x17\x2d\x63\x6e\x55\x24\xd6\x68\x24\x4a\x08\xb5\x35\x31\xd6\xa2\x2c\x83\x13\xe5\xa9\x80\xf5\x59\x48\x43\xa5\xd6\xe8\x13\x03\xb8\x6b\x41\x4f\x6c\xdb\x42\x5d\x23\x97\x5c\xe9\x0e\xe8\xd4\xf6\x94\xba\x38\x91\x7a\xad\xdc\xd3\xf7\x9b\x5b\xca\x3a\x79\x8c\xa6\x94\xb6\xaa\x35\x7a\x7c\x51\x99\xdf\xd8\x60\xe4\xa8\x2e\xaf\x67\x9b\xeb\xb2\x2e\x63\x9d\xc9\x67\x20\xe6\xa6\x73\xbc\x85\xe3\x5e\x95\xfb\x91\x95\x63\x44\x9a\x5d\x14\x95\x1b\x23\x12\xc5\x70\x93\xaa\xe4\xa9\xe1\xec\xe8\x97\xc9\xdd\x0b\xca\x40\x41\x03\x14\xca\x12\x89\xb6\x81\x8b\x68\x3c\x2e\x8d\x5e\xd7\x8c\x19\x48\x3c\x61\x83\x71\x78\x68\x74\xbc\x11\x24\x10\x9a\xa9\x52\x5a\x8c\xca\x0c\x44\x56\xc8\x99\x91\x87\xc1\xd6\x1f\x91\x8b\xfa\x18\xfe\xfd\xcb\xc3\x23\x08\x7d\x14\x27\xca\xd8\x83\x8d\x92\xca\x61\xc9\x01\x17\x7a\x20\xb9\x11\xba\x41\x7f\x64\x0f\xa4\xe7\xc2\x75\x0c\xc9\x71\x17\xf8\x21\x6b\x8b\x83\x55\x12\x6a\x4b\xa4\xb8\xe3\x23\x2c\x83\x53\xfe\x04\x8a\x88\x87\xb2\x17\xd2\x58\xff\xa6\xe3\x55\x20\xee\x6e\x6c\xca\xa4\x6f\xae\x4b\xb8\x87\x4a\xcd\x58\x6f\x2a\x9f\x2e\x6c\x2c\x20\x76\x53\xb9\x5e\x06\x23\xd1\xe9\x98\xd2\x99\xb0\x33\x21\xc5\x51\x68\xb2\x34\x0d\xb5\x14\x84\x77\x9d\xaa\xd3\xd6\xce\xad\xd2\x9a\xab\x27\x57\x33\x9f\x32\x64\xde\x48\xf9\xca\xba\xce\xd3\x90\x38\x52\xda\x7d\x70\x26\xb7\xe4\xb0\x7e\xf8\x00\xf3\x75\x6c\xd2\x9b\xa0\xdd\xa7\xda\x3f\x87\xdd\xfd\xe7\x35\x70\xa7\x58\xc0\xaf\x4c\x87\xd7\xfb\xa8\xc6\x96\x6b\xda\xfe\x4f\xaa\xf2\xbe\xa8\xee\x6f\x8a\x7c\xa3\x2c\x75\xd4\xe4\x56\x22\x76\x21\x4e\x1d\xd0\x01\x85\xba\xb6\xce\x0f\x9b\x1b\x35\xda\xbf\x8c\xb3\x43\xdb\x33\xc4\xf0\xe7\x0e\xea\x1a\x0a\x42\xba\x51\xba\x6c\x0e\x53\x8d\x58\x01\x8f\xc3\xfd\x0b\x9e\xf4\x4c\xe2\x1b\x9d\xb3\xee\x55\xc0\x8e\x3b\x1a\x44\x6b\x41\xcc\x40\xf1\xb2\x4b\xe6\x4f\x32\xb8\xee\xdd\x50\x6b\xe3\xdd\xd0\x9e\x2d\x08\x73\xea\x75\xc0\x65\x33\x48\xec\x51\xd7\xdb\xa0\x99\xf9\x42\x5d\xa3\x03\xcd\xf3\x79\xb7\xde\xbe\x51\x05\x16\x43\xa1\xa2\xae\x35\xbb\x99\xbd\x7a\x5e\xfd\x96\x05\x49\x2c\x95\x44\x4e\xbe\x5c\xc7\xf1\xd4\xb9\x0d\xf2\xca\x04\x84\x91\x24\x39\x0a\x15\xaf\x40\x52\x83\xd6\x19\x7b\xbc\xed\xce\xa0\x1b\xc1\xfd\xa6\x4d\x79\xcd\x0e\xe7\x78\x46\x97\x8c\x20\x8f\xa1\xf3\xba\x81\xb3\x42\x22\xb1\xfb\xb1\x99\x66\x9e\x37\xf7\x2e\x79\x24\x7a\xa1\x74\x73\xb7\x83\xa6\xb4\xc1\x78\x74\x4d\x1c\x47\x05\x4d\xc5\x96\x43\xd9\x82\xbd\xa9\x3b\xcd\xa1\x95\x38\xb1\x9f\xb4\xdd\xed\x50\x0e\x03\x16\x83\x66\x24\x67\x48\x0e\x06\xa7\x0e\x07\x44\x28\x03\x84\x86\x94\x57\x87\x5e\x27\x34\xe0\x6f\xb8\x35\x23\xfa\x11\xfe\xbe\x74\x5d\x4a\xc2\x69\xae\x4e\xf0\x3e\x0a\xea\x3a\x6b\x6c\x4c\xbb\x95\x8d\x37\xb4\x9d\x1c\xe5\x1c\x0a\x79\x7a\xb4\x5f\xe8\x75\xa5\xe8\xbc\xad\x43\x41\xaa\x77\xad\x14\xef\x51\x85\x3c\x65\x48\xf3\xe4\x34\x74\xa1\x05\x87\x5c\x6d\x10\x44\x9e\x2a\xaf\x57\x9b\x41\x75\x19\x66\xd6\x95\x6a\x13\xf5\xf9\xea\xed\xd7\x40\x0d\x83\x0f\x8b\xcb\xb0\x77\xfc\x91\x62\x73\x51\x5c\x06\x42\x6f\x14\x9b\xdb\x9a\x8e\x5d\xd7\xfc\x48\xad\x01\xe5\xef\xd2\x10\x72\x54\x84\xc3\x54\x1a\x29\x8d\x84\x91\xa7\xe6\x8f\x2e\xe0\x7c\xa2\x30\x71\x63\x97\x50\xcf\xa6\x28\x83\x23\x23\xbb\xbd\xc4\xcb\x44\x25\x4a\xe0\xdd\x58\xab\x51\x98\x0b\xf4\x46\xf0\x3c\xa8\x3f\x5e\x0b\xdf\x76\xdf\x60\xcc\xcb\x13\x0a\x10\x7f\xbc\x59\x3e\xb9\x7d\xe2\xa1\xf7\x75\xa8\xbd\x08\xfc\x98\xd8\x33\x16\x58\x91\xaf\xf1\x94\x49\xcc\x4e\x61\x74\x20\xf8\x35\x98\x7d\x99\xaa\x2f\xd7\x73\xa2\x1b\x9a\xd6\x71\x1a\xb1\x05\xfc\x9d\x19\x34\x85\x31\xfd\x16\x95\xd8\x23\x9e\x34\x8e\xe1\xae\x71\xfd\xe8\xe6\xad\x71\xc4\xf8\xf8\xe9\x31\x42\xbc\x12\x5c\xe2\xd3\x5c\x3e\x96\x6a\x5d\x04\xa9\x6d\x6c\xc5\xa8\x9b\x02\x6d\x46\xe5\x1c\x88\x2d\xf5\xc5\x55\xce\x40\xe8\x4b\x5b\xbc\xa8\xfc\xad\x7c\x19\xd4\x81\x91\x1a\x30\xbc\x53\x59\xc4\xd3\x67\xa3\x3b\xda\xdf\x85\x9b\x9f\xa0\xdb\x57\xb9\xb7\x58\x34\xbf\xd5\xb6\xdf\xf9\x49\x9d\xdc\x0a\xbc\x6b\x1b\xe6\x3c\x60\xe4\x77\xe7\xbb\x19\x51\x96\x58\x7b\x94\x1f\x2f\x7f\x9b\x9d\x27\x98\x34\x3f\xb7\xc6\x7f\x4b\x6b\xa4\x4a\x3f\x6a\xc3\x3f\xfe\x39\x4b\x52\x51\x3e\x35\x2a\xf1\xcb\xff\x06\x00\x00\xff\xff\xe5\x32\x59\xa2\x52\x1f\x00\x00")

func assetsVolumesnapshotsYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsVolumesnapshotsYaml,
		"assets/volumesnapshots.yaml",
	)
}

func assetsVolumesnapshotsYaml() (*asset, error) {
	bytes, err := assetsVolumesnapshotsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/volumesnapshots.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/csi_controller_deployment.yaml": assetsCsi_controller_deploymentYaml,
	"assets/volumesnapshotclasses.yaml": assetsVolumesnapshotclassesYaml,
	"assets/volumesnapshotcontents.yaml": assetsVolumesnapshotcontentsYaml,
	"assets/volumesnapshots.yaml": assetsVolumesnapshotsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"csi_controller_deployment.yaml": &bintree{assetsCsi_controller_deploymentYaml, map[string]*bintree{}},
		"volumesnapshotclasses.yaml": &bintree{assetsVolumesnapshotclassesYaml, map[string]*bintree{}},
		"volumesnapshotcontents.yaml": &bintree{assetsVolumesnapshotcontentsYaml, map[string]*bintree{}},
		"volumesnapshots.yaml": &bintree{assetsVolumesnapshotsYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

